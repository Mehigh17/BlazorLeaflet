@page "/"

@using System.Drawing
@using BlazorLeaflet.Models
@using BlazorLeaflet.Models.Events
@inject IJSRuntime jsRuntime

<h1>Blazor Leaflet </h1>

<h3>Tile Layer sample</h3>

<div class="content-row">
    <div style="height: 500px; width: 500px;">
        <LeafletMap Map="_map" InitialPosition="_startAt" InitialZoom="4.8f" />
    </div>

    <DemoLogger @ref="Logger" />
</div>

@code
{
    private DemoLogger Logger;

    private Map _map;

    protected override void OnInitialized()
    {
        _startAt = new PointF(Lat, Lng);

        _map = new Map(jsRuntime);

        var tileLayer = new TileLayer
        {
            UrlTemplate = "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
            Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
        };

        Action<string> log = (string message) => Logger.Log($"{nameof(TileLayer)}.{message}");

        tileLayer.OnAdd += (s, e) => log(nameof(tileLayer.OnAdd));
        tileLayer.OnRemove += (s, e) => log(nameof(tileLayer.OnRemove));
        tileLayer.OnPopupClose += (s, e) => log(nameof(tileLayer.OnPopupClose));
        tileLayer.OnPopupOpen += (s, e) => log(nameof(tileLayer.OnPopupOpen));
        tileLayer.OnTooltipClose += (s, e) => log(nameof(tileLayer.OnTooltipClose));
        tileLayer.OnTooltipOpen += (s, e) => log(nameof(tileLayer.OnTooltipOpen));
        tileLayer.OnLoad += (s, e) => log(nameof(tileLayer.OnTooltipOpen));
        tileLayer.OnLoading += (s, e) => log(nameof(tileLayer.OnLoading));
        tileLayer.OnRemove += (s, e) => log(nameof(tileLayer.OnRemove));
        tileLayer.OnTileError += (s, e) => log(nameof(tileLayer.OnTileError));
        tileLayer.OnTileLoad += (s, e) => log(nameof(tileLayer.OnTileLoad));
        tileLayer.OnTileLoadStart += (s, e) => log(nameof(tileLayer.OnTileLoadStart));
        tileLayer.OnTileUnload += (s, e) => log(nameof(tileLayer.OnTileUnload));

        _map.Layers.Add(tileLayer);
    }

    private float Lat { get; set; } = 47.5574007f;

    private float Lng { get; set; } = 16.3918687f;

    private PointF _startAt;

}