@page "/image-layer"

@using System.Drawing
@using BlazorLeaflet.Models
@using BlazorLeaflet.Models.Events
@inject IJSRuntime jsRuntime

<h1>Blazor Leaflet </h1>

<h3>ImageLayer Sample</h3>

<div class="content-row">
    <div style="height: 500px; width: 500px;">
        <LeafletMap Map="_map" InitialPosition="_startAt" InitialZoom="4.8f" />
    </div>

    <DemoLogger @ref="Logger" />
</div>

@code
{
    private DemoLogger Logger;

    private Map _map;

    protected override void OnInitialized()
    {
        _startAt = new PointF(Lat, Lng);

        _map = new Map(jsRuntime);

        _map.Layers.Add(new TileLayer
        {
            UrlTemplate = "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
            Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
        });

        var marker = new ImageLayer(
            "https://cdn.pixabay.com/photo/2020/01/20/16/21/sea-4780715_960_720.jpg",
            new PointF(Lat - 2, Lng - 4),
            new PointF(Lat + 2, Lng + 4))
        {
        };

        Action<string> log = (string message) => Logger.Log($"{nameof(ImageLayer)}.{message}");

        marker.OnAdd += (s, e) => log(nameof(marker.OnAdd));
        marker.OnClick += (s, e) => log(nameof(marker.OnClick));
        marker.OnContextMenu += (s, e) => log(nameof(marker.OnContextMenu));
        marker.OnDblClick += (s, e) => log(nameof(marker.OnDblClick));
        marker.OnMouseDown += (s, e) => log(nameof(marker.OnMouseDown));
        marker.OnMouseOut += (s, e) => log(nameof(marker.OnMouseOut));
        marker.OnMouseOver += (s, e) => log(nameof(marker.OnMouseOver));
        marker.OnMouseUp += (s, e) => log(nameof(marker.OnMouseUp));
        marker.OnRemove += (s, e) => log(nameof(marker.OnRemove));
        marker.OnPopupClose += (s, e) => log(nameof(marker.OnPopupClose));
        marker.OnPopupOpen += (s, e) => log(nameof(marker.OnPopupOpen));
        marker.OnTooltipClose += (s, e) => log(nameof(marker.OnTooltipClose));
        marker.OnTooltipOpen += (s, e) => log(nameof(marker.OnTooltipOpen));
        marker.OnLoad += (s, e) => log(nameof(marker.OnLoad));
        marker.OnError += (s, e) => log(nameof(marker.OnError));

        _map.Layers.Add(marker);
    }

    private float Lat { get; set; } = 47.5574007f;

    private float Lng { get; set; } = 16.3918687f;

    private PointF _startAt;

}